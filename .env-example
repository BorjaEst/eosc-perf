### General configuration
# domain name
# set to localhost if developing locally
DOMAIN=perf.test.fedcloud.edu
# suport email
SUPPORT_EMAIL=perf-support@lists.kit.edu

### Certificate configuration
# letsencrypt certificate email
# you may leave this blank, but it is strongly recommended to add one
EMAIL=
# certbot staging mode
# Set to 1 if you're testing your setup to avoid hitting request limits
STAGING=0

### Frontend configuration
# environment (production/development)
# development includes tests dependencies
FRONTEND_ENV=production
# Enable debug mode.
# DO NOT RUN THIS IN PRODUCTION!
# TODO: Make it by default false=>production true=>development
EOSC_PERF_DEBUG=false
# Navbar-link to infrastructure manager
IM_HREF=https://example.com

### EGI-AAI OIDC configuration
# Client secret to use (leave this to default for docker)
OIDC_CLIENT_SECRET_PATH=/run/secrets/oidc_client_secret
# Your EGI-AAI application client id
OIDC_CLIENT_ID=
# List of admissible entitlements for administrator rights, JSON-array-formatted
ADMIN_ENTITLEMENTS=["urn:mace:egi.eu:group:mteam.data.kit.edu:role=member"]
# TODO: (comming form backend) Remove, merge it with OIDC_CLIENT etc.
OIDC_CLIENT_SECRET=your-oidc-secret
# TODO: (comming form backend) Remove, merge it with ADMIN_ENTITLEMENTS 
ADMIN_ASSURANCE=https://refeds.org/assurance/IAP/low

### Cookie encryption
# encryption key for flask session cookie encryption
# if the file is blank, a random key will be generated every instance and will not persist
COOKIE_KEY_PATH=/run/secrets/cookie_secret
# TODO: (comming form backend) Remove, merge it with COOKIE_KEY_PAHT
SECRET_KEY=not-so-secret

### Database configuration
# Database engine to use (sqlite, postgres)
DB_ENGINE=postgresql
# Database name (or file path if sqlite)
DB_NAME=eosc_perf
# if using sqlite, leave the following empty
DB_USER=mynonsuperuser
DB_PASSWORD=test123
DB_HOST=localhost
DB_PORT=5432

### Mail configuration
MAIL_HOST=smtp.office365.com
MAIL_PORT=587
MAIL_FROM=from@example.com
MAIL_TO=to@example.com

### Backend configuration
BACKEND_ENV=development
BACKEND_WORKERS=1
BACKEND_LOG_LEVEL=debug
#TODO to be removed
FLASK_APP=service_backend/autoapp.py
FLASK_ENV=development

### Extra development options.
# Populate the database with demo items (diagram, etc)
EOSC_PERF_DEBUG_DB_DEMO_ITEMS=false
# TODO:
## NOTE: The last 2 env variables can be removed once the backend-frontend relation is build.
## The idea is that when backend is in development/debug the authentication/authorization is disables.
## It is important that tests should ensure that when production, the correct resources are protected.
# Give admin rights to anyone logged in in debug mode
# DO NOT RUN THIS IN PRODUCTION!
EOSC_PERF_DEBUG_LOGGED_IN_IS_ADMIN=false
# This is used instead of the regular admin_entitlements key, JSON-array-formatted
EOSC_PERF_DEBUG_ADMIN_ENTITLEMENTS=["urn:mace:egi.eu:group:mteam.data.kit.edu:role=member"]

