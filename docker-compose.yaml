version: '3.5'

x-sqlite-db-dir:
  &sqlite-db-dir
  type: bind
  source: ./data/


services:

  frontend:
    container_name: frontend
    restart: unless-stopped
    image: frontend    
    build:
      context: ./frontend
      # target: ${FRONTEND_ENV}
    env_file: .env      
    volumes:
      - << : *sqlite-db-dir
        target: /app/data/
    secrets:
      - source: oidc_secret
        target: oidc_client_secret
        uid: 'uwsgi'
        mode: 0400
      - source: cookie_secret
        target: cookie_secret
        uid: 'uwsgi'
        mode: 0400

  reverse_proxy:
    container_name: reverse_proxy
    restart: unless-stopped    
    image: reverse_proxy
    build:
      context: ./reverse_proxy
    depends_on:
      - frontend
      - certbot
    env_file: .env    
    volumes:
      - ./static:/var/www/web/
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot/
    secrets:
      - source: nginx_api_secret
        target: nginx_api_credentials
    ports:
      - "80:80"
      - "443:443"

  certbot:
    image: certbot
    restart: unless-stopped
    build:
      context: docker/certbot
      dockerfile: Dockerfile
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    env_file: .env
    secrets:
      - source: nginx_api_secret
        target: nginx_api_credentials

  sqlite-backuper:
    image: sqlite-backuper
    build:
      context: docker/sqlite-backuper
      dockerfile: Dockerfile
    restart: unless-stopped
    volumes:
      - <<: *sqlite-db-dir
        target: /workdir/

secrets:
  oidc_secret:
    file: ./oidc_secret.txt
  cookie_secret:
    file: ./cookie_secret.txt
  nginx_api_secret:
    file: ./nginx_api_credentials.txt
